# ==========================================================
# completion engine
# ==========================================================

[[plugins]]
repo = 'Shougo/deoplete.nvim'
on_i = 1
hook_add = '''
source ~/.config/nvim/plugins/deoplete.rc.vim
'''

# ==========================================================
# completion plugins
# ==========================================================

[[plugins]]
repo = 'ujihisa/neco-look'
on_source = ['deoplete.nvim']

[[plugins]]
repo = 'Shougo/neco-syntax'
on_source = ['deoplete.nvim']

[[plugins]]
repo = 'Konfekt/FastFold'
on_source = ['deoplete.nvim']

[[plugins]]
repo = 'zchee/deoplete-jedi'
depends = 'deoplete.nvim'
if = "has('nvim')"
on_ft = 'python'
hook_source = '''
if has('unix')
  let g:python_host_prog = '/usr/bin/python2'
  let g:python3_host_prog = '/usr/bin/python3'
endif
if has('mac')
  let g:python_host_prog = '/usr/local/bin/python2'
  let g:python3_host_prog = '/usr/local/bin/python3'
endif
'''

[[plugins]]
repo = 'zchee/deoplete-go'
depends = 'deoplete.nvim'
on_ft = 'go'
build = 'make'
hook_source = '''
let g:deoplete#sources#go#gocode_binary = $GOPATH.'/bin/gocode'
let g:deoplete#sources#go#sort_class = ['package', 'func', 'type', 'var', 'const']
let g:deoplete#sources#go#use_cache = 1
let g:deoplete#sources#go#json_directory = '~/.cache/deoplete/go/$GOOS_$GOARCH'
'''

[[plugins]]
repo = 'mhartington/nvim-typescript'
depends = 'deoplete.nvim'
on_ft = 'typescript'

[[plugins]]
repo = 'tweekmonster/deoplete-clang2'
depends = 'deoplete.nvim'
on_ft = ['c', 'cpp']
hook_source = '''
nnoremap <silent> ctd :!clang-tidy % -fix -checks="readability-braces-around-statements"<CR>
let g:clang2_placeholder_prev = '<C-n>'
let g:clang2_placeholder_next = '<C-k>'
'''

[[plugins]]
repo = 'fszymanski/deoplete-emoji'
depends = 'deoplete.nvim'
on_ft = 'markdown'

# ==========================================================
# block search and precious
# ==========================================================

[[plugins]]
repo = 'kana/vim-operator-user'

[[plugins]]
repo = 'kana/vim-textobj-user'

[[plugins]]
repo = 'kana/vim-textobj-function'

[[plugins]]
repo = 'osyo-manga/vim-operator-search'
depends = ['vim-operator-user', 'vim-textobj-function', 'vim-textobj-user']
hook_add = '''
nmap <Space>/ <Plug>(operator-search)if
'''
on_ft = ['c', 'cpp']

# ==========================================================
# lang
# ==========================================================

[[plugins]]
repo = 'Shougo/neco-vim'
on_ft = 'vim'

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'Shougo/neoinclude.vim'
on_ft = ['c', 'cpp']

[[plugins]]
repo = 'vim-jp/cpp-vim'
on_ft = ['c', 'cpp']

[[plugins]]
repo = 'majutsushi/tagbar'
on_ft = ['c', 'cpp']
hook_add = '''
nmap <F4> :TagbarToggle<CR>
'''

[[plugins]]
repo = 'rust-lang/rust.vim'
on_ft = 'rust'
hook_source = '''
let g:rustfmt_autosave = 1
'''

[[plugins]]
repo = 'fatih/vim-go'
on_ft = 'go'
hook_source = '''
let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_fields = 1
let g:go_highlight_types = 1
let g:go_highlight_operators = 1
let g:go_highlight_build_constraints = 1
'''

[[plugins]]
repo = 'hynek/vim-python-pep8-indent'
on_ft = 'python'

[[plugins]]
repo = 'plytophogy/vim-virtualenv'
on_ft = 'python'

[[plugins]]
repo = 'PieterjanMontens/vim-pipenv'
on_ft = 'python'

[[plugins]]
repo = 'elzr/vim-json'
on_ft = 'json'

[[plugins]]
repo = 'hail2u/vim-css3-syntax'
on_ft = 'css'

[[plugins]]
repo = 'mxw/vim-jsx'
on_ft = ['javascript', 'javascript.jsx']

[[plugins]]
repo = 'leafgarland/typescript-vim'
on_ft = 'typescript'

[[plugins]]
repo = 'kchmck/vim-coffee-script'
on_ft = 'coffee'

[[plugins]]
repo = 'dag/vim-fish'
on_ft = 'fish'

[[plugins]]
repo = 'tikhomirov/vim-glsl'
on_ft = 'glsl'

[[plugins]]
repo = 'neovimhaskell/haskell-vim'
on_ft = ['haskell', 'cabal']

[[plugins]]
repo = 'rhysd/vim-gfm-syntax'
on_ft = ['markdown', 'mkd']

[[plugins]]
repo = 'udalov/kotlin-vim'
on_ft = 'kotlin'

[[plugins]]
repo = 'keith/swift.vim'
on_ft = 'swift'

[[plugins]]
repo = 'posva/vim-vue'
on_ft = 'vue'
hook_add = '''
setlocal iskeyword+=$
setlocal iskeyword+=-
autocmd FileType vue syntax sync fromstart
let g:ft = ''
function! NERDCommenter_before()
  if &ft == 'vue'
    let g:ft = 'vue'
    let stack = synstack(line('.'), col('.'))
    if len(stack) > 0
      let syn = synIDattr((stack)[0], 'name')
      if len(syn) > 0
        exe 'setf ' . substitute(tolower(syn), '^vue_', '', '')
      endif
    endif
  endif
endfunction
function! NERDCommenter_after()
  if g:ft == 'vue'
    setf vue
    let g:ft = ''
  endif
endfunction
'''

[[plugins]]
repo = 'mattn/emmet-vim'
on_ft = ['html', 'vue']

[[plugins]]
repo = 'Shougo/vinarise.vim'
on_cmd = 'Vinarise'
